<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
  <style>
    body{
      margin: 0px;
      padding: 0px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
  </style>
</head>
<body>
  <h1>Snake - The Game</h1>
  <button onClick="window.location.reload();">Restart</button> .
  <canvas id="game" width="400" height="400"/>
  <script src="index.js"></script>
</body>
</html>

-------------------------------------------------------------------------------------------------

const canvas = document.getElementById("game");
const ctx = canvas.getContext("2d");

class SnakePart{ //Verlängerung der Snake
    constructor(x, y){
        this.x = x;
        this.y = y;
    }
}

let speed = 7; //legt die Spielgeschwindigkeit fest

let tileCount = 20; //teilt das Spielfeld durch 20
let tileSize = canvas.width / tileCount - 2
let headX = 10; //X Position der Snake
let headY = 10; //Y Position der Snake
const snakeParts = []; //Länge der Snake
let tailLength = 2; //Länge der Snake

let appleX = 5; //X Position des Apfels
let appleY = 5; //Y Position des Apfels

let xVelocity = 0; //X Geschwindigkeit
let yVelocity = 0; //Y Geschwindigkeit

let score = 0; //Punktestand


function drawGame(){ //game loop
    changeSnakePosition();
    let result = isGameOver();
    if(result){
        return;
    }
 
    clearScreen();

    checkAppleCollision();
    drawApple();
    drawSnake();

    drawScore();

    if(score > 2){
        speed = 8;
    }
    if(score > 4){
        speed = 9;
    }
    if(score > 6){
        speed = 10;
    }
    if(score > 8){
        speed = 11;
    }
    if(score > 10){
        speed = 12;
    }
    if(score > 12){
        speed = 13;
    }
    if(score > 14){
        speed = 14;
    }
    if(score > 16){
        speed = 15;
    }
    if(score > 18){
        speed = 16;
    }

    setTimeout(drawGame, 1000/ speed);
}

function isGameOver (){ //legt fest, wann man verloren hat
    let gameOver = false;

    if(yVelocity === 0 && xVelocity === 0){
        return false;
    }


    if(headX < 0){
        gameOver = true
    }
    else if(headX === tileCount){
        gameOver = true
    }
    else if(headY < 0){
        gameOver = true;
    }
    else if(headY === tileCount){
        gameOver = true
    }

    for(let i =0; i < snakeParts.length; i++){
        let part = snakeParts[i];
        if(part.x === headX && part.y === headY){
            gameOver = true;
            break;
        }
    }

    if (gameOver){
        ctx.fillStyle = "white"
        ctx.font = "50px Verdana"
        ctx.fillText("Game Over!", canvas.width / 6.5, canvas.height / 2)
    }
    
    return gameOver;
}

function drawScore(){ //Spielstandsanzeige
    ctx.fillStyle = "white";
    ctx.font = "10px Verdana"
    ctx.fillText("Score " + score, canvas.width-50, 10)
}

function clearScreen(){ //Hintergrund
    ctx.fillStyle = "black";
    ctx.fillRect(0,0, canvas.width, canvas.height);
}

function drawSnake(){ //platziert die Snake, fügt neue Teile hinzu
    ctx.fillStyle = "purple"
    for(let i =0; i < snakeParts.length; i++){
        let part = snakeParts[i];
        ctx.fillRect(part.x * tileCount, part.y * tileCount, tileSize, tileSize)
    }

    snakeParts.push(new SnakePart(headX, headY));
    while (snakeParts.length > tailLength){
        snakeParts.shift();
    }

    ctx.fillStyle = "magenta" 
    ctx.fillRect(headX * tileCount, headY * tileCount, tileSize, tileSize)
    
}

function changeSnakePosition(){ //Bewegung der Snake
    headX = headX + xVelocity
    headY = headY + yVelocity
}

function drawApple(){ //erstellt den Apfel
    ctx.fillStyle = "green";
    ctx.fillRect(appleX * tileCount, appleY * tileCount, tileSize, tileSize)
}

function checkAppleCollision(){ //überprüft Kollision
    if(appleX === headX && appleY == headY){
        appleX = Math.floor(Math.random() * tileCount);
        appleY = Math.floor(Math.random() * tileCount);
        tailLength++;
        score++;
    }
}

document.body.addEventListener("keydown", keyDown); //Wartet auf Tastendruck

function keyDown(event){ //Steuerung
    if(event.keyCode == 38){
        if(yVelocity == 1)
            return;
        yVelocity = -1;
        xVelocity = 0;
    }

    if(event.keyCode == 40){
        if(yVelocity == -1)
            return;
        yVelocity = 1;
        xVelocity = 0;
    }

    if(event.keyCode == 37){
        if(xVelocity == 1)
            return;
        yVelocity = 0;
        xVelocity = -1;
    }

    if(event.keyCode == 39){
        if(xVelocity == -1)
            return;
        yVelocity = 0;
        xVelocity = 1;
    }


}

drawGame();

